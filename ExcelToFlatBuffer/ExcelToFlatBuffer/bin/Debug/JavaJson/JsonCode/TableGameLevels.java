// Generated by the table tool compiler.  DO NOT EDIT!

package com.cyou.fusion.table.data;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;

public class TableGameLevels {

     @JsonProperty("Id")
     private int mId;
     @JsonProperty("Desc")
     private String mDesc;
     @JsonProperty("Opencondition")
     private List<Integer> mOpencondition;
     @JsonProperty("Step")
     private int mStep;
     @JsonProperty("Condition")
     private List<Integer> mCondition;
     @JsonProperty("Bonusid")
     private int mBonusid;
     @JsonProperty("Addentityid")
     private int mAddentityid;
     @JsonProperty("Leveltype")
     private int mLeveltype;
     @JsonProperty("Maptype")
     private int mMaptype;
     @JsonProperty("Gamemode")
     private int mGamemode;
     @JsonProperty("Defaultopenspeed")
     private boolean mDefaultopenspeed;
     @JsonProperty("Fallingspeed")
     private int mFallingspeed;
     @JsonProperty("Guidegroupid")
     private int mGuidegroupid;
     @JsonProperty("Guidenewplaystepid")
     private int mGuidenewplaystepid;
     @JsonProperty("Guidehelpid")
     private int mGuidehelpid;
     @JsonProperty("Background")
     private String mBackground;
     @JsonProperty("Leveltargetmsg")
     private String mLeveltargetmsg;
     @JsonProperty("Openfunctionid")
     private int mOpenfunctionid;
     @JsonProperty("Openitem")
     private String mOpenitem;
     @JsonProperty("Mofangproduceitemid")
     private int mMofangproduceitemid;
     @JsonProperty("Buystepfreeofcharge")
     private boolean mBuystepfreeofcharge;
     @JsonProperty("Backimgid")
     private int mBackimgid;


     //#场景ID     
     public int getId(){return this.mId;}
     //描述(不读)     
     public String getDesc(){return this.mDesc;}
     //关卡开启条件1     
     public List<Integer> getOpencondition(){return this.mOpencondition;}
     //通关步数     
     public int getStep(){return this.mStep;}
     //通关条件1（LevelTarget表的通关目标）     
     public List<Integer> getCondition(){return this.mCondition;}
     //奖励id     
     public int getBonusid(){return this.mBonusid;}
     //附加类型（实体ID）     
     public int getAddentityid(){return this.mAddentityid;}
     //关卡类型(具体的类型要跟程序的一致：-1无效，1幽灵)     
     public int getLeveltype(){return this.mLeveltype;}
     //地图类型(1.经典地图(不支持浮空下落);2.固定地图;3.竖屏滑动地图;4.横屏滑动地图;5.母鸡捉小鹰地图 6.幽灵，8.啄木鸟，10地鼠)     
     public int getMaptype(){return this.mMaptype;}
     //游戏类型（当maptype列为6幽灵时，gamemode列对应ghosttype表中的ID     
     public int getGamemode(){return this.mGamemode;}
     //默认是否开启速度     
     public boolean getDefaultopenspeed(){return this.mDefaultopenspeed;}
     //方块下落速度(MS)     
     public int getFallingspeed(){return this.mFallingspeed;}
     //GuideModeGroup表id 引导id组     
     public int getGuidegroupid(){return this.mGuidegroupid;}
     //新玩法引导ID     
     public int getGuidenewplaystepid(){return this.mGuidenewplaystepid;}
     //引导帮助ID     
     public int getGuidehelpid(){return this.mGuidehelpid;}
     //棋盘背景图     
     public String getBackground(){return this.mBackground;}
     //通关目标提示     
     public String getLeveltargetmsg(){return this.mLeveltargetmsg;}
     //新功能开启Id     
     public int getOpenfunctionid(){return this.mOpenfunctionid;}
     //OpenItem表 ID（开启后之后默认的关卡都开启）     
     public String getOpenitem(){return this.mOpenitem;}
     //魔方生成道具ID     
     public int getMofangproduceitemid(){return this.mMofangproduceitemid;}
     //是否为免费使用     
     public boolean getBuystepfreeofcharge(){return this.mBuystepfreeofcharge;}
     //战前界面玩法背景图     
     public int getBackimgid(){return this.mBackimgid;}


}