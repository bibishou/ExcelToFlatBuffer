// Generated by the table tool compiler.  DO NOT EDIT!

package com.cyou.fusion.table.data;

import com.fasterxml.jackson.annotation.JsonProperty;

public class TableLevelTarget {

     @JsonProperty("#Id")
     private int m#Id;
     @JsonProperty("Desc")
     private int mDesc;
     @JsonProperty("OpenCondition:0")
     private int mOpenCondition:0;
     @JsonProperty("OpenCondition:1")
     private int mOpenCondition:1;
     @JsonProperty("OpenCondition:2")
     private int mOpenCondition:2;
     @JsonProperty("Step")
     private int mStep;
     @JsonProperty("Condition:0")
     private int mCondition:0;
     @JsonProperty("Condition:1")
     private int mCondition:1;
     @JsonProperty("Condition:2")
     private int mCondition:2;
     @JsonProperty("BonusId")
     private int mBonusId;
     @JsonProperty("AddEntityID")
     private int mAddEntityID;
     @JsonProperty("LevelType")
     private int mLevelType;
     @JsonProperty("MapType")
     private int mMapType;
     @JsonProperty("GameMode")
     private int mGameMode;
     @JsonProperty("DefaultOpenSpeed")
     private int mDefaultOpenSpeed;
     @JsonProperty("FallingSpeed")
     private int mFallingSpeed;
     @JsonProperty("GuideGroupId")
     private int mGuideGroupId;
     @JsonProperty("GuideNewPlayStepID")
     private int mGuideNewPlayStepID;
     @JsonProperty("GuideHelpId")
     private int mGuideHelpId;
     @JsonProperty("Background")
     private int mBackground;
     @JsonProperty("LevelTargetMsg")
     private int mLevelTargetMsg;
     @JsonProperty("OpenFunctionID")
     private int mOpenFunctionID;
     @JsonProperty("OpenItem")
     private int mOpenItem;
     @JsonProperty("MoFangProduceItemId")
     private int mMoFangProduceItemId;
     @JsonProperty("BuyStepFreeofcharge")
     private int mBuyStepFreeofcharge;
     @JsonProperty("BackImgId")
     private int mBackImgId;


     //#场景ID     
     public int get#Id(){return this.m#Id;}
     //描述(不读)     
     public int getDesc(){return this.mDesc;}
     //关卡开启条件1     
     public int getOpenCondition:0(){return this.mOpenCondition:0;}
     //关卡开启条件2     
     public int getOpenCondition:1(){return this.mOpenCondition:1;}
     //关卡开启条件3     
     public int getOpenCondition:2(){return this.mOpenCondition:2;}
     //通关步数     
     public int getStep(){return this.mStep;}
     //通关条件1（LevelTarget表的通关目标）     
     public int getCondition:0(){return this.mCondition:0;}
     //通关条件2（LevelTarget表的通关目标）     
     public int getCondition:1(){return this.mCondition:1;}
     //通关条件3     
     public int getCondition:2(){return this.mCondition:2;}
     //奖励id     
     public int getBonusId(){return this.mBonusId;}
     //附加类型（实体ID）     
     public int getAddEntityID(){return this.mAddEntityID;}
     //关卡类型(具体的类型要跟程序的一致：-1无效，1幽灵)     
     public int getLevelType(){return this.mLevelType;}
     //地图类型(1.经典地图(不支持浮空下落);2.固定地图;3.竖屏滑动地图;4.横屏滑动地图;5.母鸡捉小鹰地图 6.幽灵，10地鼠)     
     public int getMapType(){return this.mMapType;}
     //游戏类型（当maptype列为6幽灵时，gamemode列对应ghosttype表中的ID     
     public int getGameMode(){return this.mGameMode;}
     //默认是否开启速度     
     public int getDefaultOpenSpeed(){return this.mDefaultOpenSpeed;}
     //方块下落速度(MS)     
     public int getFallingSpeed(){return this.mFallingSpeed;}
     //GuideModeGroup表id 引导id组     
     public int getGuideGroupId(){return this.mGuideGroupId;}
     //新玩法引导ID     
     public int getGuideNewPlayStepID(){return this.mGuideNewPlayStepID;}
     //引导帮助ID     
     public int getGuideHelpId(){return this.mGuideHelpId;}
     //棋盘背景图     
     public int getBackground(){return this.mBackground;}
     //通关目标提示     
     public int getLevelTargetMsg(){return this.mLevelTargetMsg;}
     //新功能开启Id     
     public int getOpenFunctionID(){return this.mOpenFunctionID;}
     //OpenItem表 ID（开启后之后默认的关卡都开启）     
     public int getOpenItem(){return this.mOpenItem;}
     //魔方生成道具ID     
     public int getMoFangProduceItemId(){return this.mMoFangProduceItemId;}
     //是否为免费使用     
     public int getBuyStepFreeofcharge(){return this.mBuyStepFreeofcharge;}
     //战前界面玩法背景图     
     public int getBackImgId(){return this.mBackImgId;}


}